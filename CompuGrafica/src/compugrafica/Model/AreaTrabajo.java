/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compugrafica.Model;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

/**
 *
 * @author herna
 */
public class AreaTrabajo extends javax.swing.JPanel {

    private BufferedImage Lienzo;

    /**
     * Creates new form Lienzo
     */
    public AreaTrabajo() {
        Lienzo = new BufferedImage(600, 500, BufferedImage.TYPE_INT_ARGB);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(601, 501));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_formMouseMoved

    //GET BUFFIMAGE
    public BufferedImage getLienzo() {
        return Lienzo;
    }

    public void setLienzo(BufferedImage I) {
        this.Lienzo = I;
    }

    //PINTAR IMAGEN BUFFERIMAGE
    public void pintar() {
        Graphics g = getGraphics();
        Graphics2D g2d = (Graphics2D) g;
        g2d.drawImage(Lienzo, null, null);
    }

    //LIMPIAR IMAGEN BUFFERIMAGE
    public void limpiar() {
        Lienzo = new BufferedImage(600, 500, BufferedImage.TYPE_INT_ARGB);
        Graphics g = Lienzo.getGraphics();
        g.drawImage(Lienzo, 0, 0, this);
        repaint();
    }

    public void paintPixel(Integer x, Integer y, Color color, BufferedImage Lienzo) {
        Lienzo.setRGB(x, y, color.getRGB());
    }

    public void clean() {
        Graphics g = this.getGraphics();
        for (int i = 0; i < this.getWidth(); i++) {
            for (int j = 0; j < this.getHeight(); j++) {
                paintPixel(i, j, this.getBackground(), Lienzo);
            }
        }
        Graphics2D g2d = (Graphics2D) g;
        g2d.drawImage(Lienzo, null, null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
